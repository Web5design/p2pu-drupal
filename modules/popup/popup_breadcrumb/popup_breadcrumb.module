<?php
//$id:



/* ----- Hook implementation ---- */



/**
 * Implementation of hook_menu
 */
function popup_breadcrumb_menu(){

  return array(
   
    'admin/settings/popup/settings' => array(
      'access arguments' => array('administer popup elements'),
      'title' => 'Settings',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -1,
    ),

    'admin/settings/popup/breadcrumb' => array(
      'access arguments' => array('administer popup elements'),
      'description' => 'Configure popup breadcrumbs',
      'page arguments' => array('popup_breadcrumb_settings'),
      'page callback' => 'drupal_get_form',
      'title' => 'Popup Breadcrumbs',
      'type' => MENU_LOCAL_TASK,
      'weight' => 0,
    ),

    'admin/settings/popup/breadcrumb/remove' => array(
      'access arguments' => array('administer popup elements'),
      'page callback' => '_popup_breadcrumb_remove',
      'type' => MENU_CALLBACK,
    ),
    
  );

}



/* ---- Themeing hooks ---- */



function popup_breadcrumb_theme(){

  return array(

    'breadcrumb' => array(
      'function' => 'popup_breadcrumb_breadcrumb',
      'arguments' => array('breadcrumb' => array()),
    ),

    'popup_breadcrumb_settings' => array(
      'arguments' => array('form' => array()),
    ),

  );

}



function popup_breadcrumb_breadcrumb($breadcrumb){

  $settings = _popup_breadcrumb_settings();
  $path_args = _popup_breadcrumb_arguments($settings);
  $breadcrumb = array();

  module_load_include('inc', 'popup', 'processing');

  foreach($settings['views'] as $view_settings){

    $args = array();
    foreach($view_settings['arguments'] as $index=>$argument_enabled){
      if ($argument_enabled){
        $args[] = $path_args[$index - 1];
      }
    }

    $title = FALSE;
    $view = views_get_view($view_settings['view']);
    switch($view->base_field){
      case 'nid':
        $title = db_result(db_query('SELECT title FROM {node} WHERE nid=%d', $args[0]));
        break;
      case 'tid':
        $title = db_result(db_query('SELECT title FROM {term_data} WHERE tid=%d', $args[0]));
        break;
      case 'uid':
        $title = db_result(db_query('SELECT title FROM {user} WHERE uid=%d', $args[0]));
        break;
    }

    $attributes = array(
      'title' => $title,
      'view' => $view_settings['view'],
      'display' => $view_settings['display'],
      'args' => implode(',', $args),
      'link' => '',
    );

    $breadcrumb[] = _popup_view($attributes);
  }

  $breadcrumb = array_filter($breadcrumb);

  if (count($breadcrumb)){
    return implode(' >> ', $breadcrumb);
  }
}



function _popup_breadcrumb_compare($a, $b){
  
  $a_int = intval($a['weight']);
  $b_int = intval($b['weight']);

  if ($a_int == $b_int) {
      return 0;
  }

  return ($a_int < $b_int) ? -1 : 1;
}



/* ----- Forms ---- */



function popup_breadcrumb_settings($form_state){

  drupal_add_css(drupal_get_path('module', 'popup_breadcrumb').'/popup-breadcrumb-settings.css');

  $form = array(
    '#tree' => TRUE,
  );
  $settings = _popup_breadcrumb_settings();
  
  $views = views_get_all_views();
  $views = array_keys(array_filter($views, '_popup_breadcrumb_view_enabled'));
  $view_options = array_combine($views, $views);
  $arguments = range(1, substr_count($settings['argument-template'], '%'));
  $argument_options = array_combine($arguments, $arguments);

  $form['popup-breadcrumb-argument-template'] = array(
    '#default_value' => $settings['argument-template'],
    '#description' => 'Arguments my be represented with % eg. my/path/<strong>%</strong>/string/<strong>%</strong> or node/<strong>%</strong>',
    '#title' => 'Argument template path',
    '#type' => 'textfield',
    '#weight' => -1,
  );

  $form['popup-breadcrumb-argument-alias'] = array(
    '#default_value' => $settings['argument-alias'],
    '#title' => 'Get arguments from the path alias',
    '#type' => 'checkbox',
    '#weight' => -1,
  );

  $form['rows'] = array();

  if (count($settings['views'])){
    foreach($settings['views'] as $name => $view_data){

      $view = views_get_view($view_data['view']);
      $display_keys = $view ? array_keys($view->display) : array('default');
      $display_options = array_combine($display_keys, $display_keys);

      $form['rows'][$name] = _popup_breadcrumb_row(
        $name,
        $view_data,
        array(
          'views' => $view_options,
          'displays' => $display_options,
          'arguments' => $argument_options,
        )
      );
      
      $weight = $view_data['weight'] + 1;
    }
  }

  $form['rows']['new'] = _popup_breadcrumb_row(
    'new',
    array('weight' => $weight),
    array(
      'views' => $view_options,
      'displays' => array(),
      'arguments' => $argument_options,
    )
  );

  $form['buttons']= array(
    array('#value' => '<div class="form-item">'),
    'submit' => array(
      '#type'=>'submit',
      '#value'=>t('Save changes'),
    ),
    array('#value' => '</div>'),
    '#weight' => 1,
  );

  return $form;
}



function _popup_breadcrumb_row($key, $values, $options){

  $row = array(

    'name' => array(
      '#default_value' => $values['name'],
      '#type' => 'textfield',
      '#size' => 20,
    ),

    'view' => array(
      '#default_value' => $values['view'],
      '#options' => $options['views'],
      '#type' => 'select',
    ),

    'display' => array(),

    'arguments' => array(
      '#options' => $options['arguments'],
      '#type' => 'checkboxes',
    ),

    'weight' => array(
      '#attributes' => array('class'=>'row-weight'),
      '#default_value' => $values['weight'],
      '#size' => 5,
      '#type' => 'textfield',
    ),

    array(
      '#value' => l(t('Remove'), 'admin/settings/popup/breadcrumb/remove/'.$key),
    ),

  );

  if ($options['displays']){
    $row['display'] = array(
      '#default_value' => $values['display'],
      '#options' => $options['displays'],
      '#type' => 'select',
    );
  } else {
    $row['display'] = array(
      '#value' => 'Default',
      '#type' => 'value',
    );
  }

  if ($values['arguments']){
    $row['arguments']['#default_value'] = array_filter($values['arguments']);
  }

  return $row;
}



function theme_popup_breadcrumb_settings($form){

  $table_rows = array();

  foreach($form['rows'] as $row_id => $row){

    if (substr($row_id, 0 , 1) != '#'){
    
      $table_rows[$row_id] = array(
        'class' => 'draggable',
        'data' => array(),
      );
  
      foreach($row as $field_id => $field){
        if (substr($field_id, 0 , 1) != '#'){
          $table_rows[$row_id]['data'][] = drupal_render($form['rows'][$row_id][$field_id]);
        }
      }
    }
  }

  $header = array('Name', 'View', 'Display', 'Arguments', 'Weight', '');
  $form['table'] = array(
    '#value' => '<div class="form-item"><label>'.t('Breadcrumb levels').':</label>'.theme('table', $header, $table_rows, array('id' => 'breadcrumb-table')).'</div>'
  );

  $output .= drupal_render($form);

  drupal_add_tabledrag('breadcrumb-table', 'order', 'sibling', 'row-weight');      

  return $output;
}



function popup_breadcrumb_settings_submit(&$form, &$form_state){

  $settings = array(
    'argument-template' => $form_state['values']['popup-breadcrumb-argument-template'],
    'argument-alias' => $form_state['values']['popup-breadcrumb-argument-alias'],
  );

  foreach($form_state['values']['rows'] as $name=>$row){
    if ($row['name']){
      $settings['views'][$row['name']] = $row;
    }
  }

  if (is_array($settings['views'])){
    uasort($settings['views'], '_popup_breadcrumb_compare');
  }

  _popup_breadcrumb_settings($settings);

  drupal_set_message('The settings have been saved.');
}



/* ----- Settings ---- */



function _popup_breadcrumb_default_settings(){

  return array(
    'argument-template' => 'node/%',
    'argument-alias' => 0,
    'views' => array(),
  );

}



function _popup_breadcrumb_settings($new_settings = FALSE){

  static $settings = FALSE;
  if ($new_settings){
    $settings = $new_settings;
    variable_set('popup-breadcrumb-settings', $settings);
  }

  if (!$settings){
    $settings = variable_get('popup-breadcrumb-settings', _popup_breadcrumb_default_settings());
  }

  return $settings;
}



/* ---- Actions ---- */



function _popup_breadcrumb_remove($name){

  $settings = _popup_breadcrumb_settings();

  unset($settings['views'][$name]);

  _popup_breadcrumb_settings($settings);

  drupal_set_message('Breadcrumb level removed.');

  drupal_goto('admin/settings/popup/breadcrumb');
}



/* ---- Utilities ----- */



function _popup_breadcrumb_arguments($settings){

  $argument_template = $settings['argument-template'];

  $path = $settings['argument-alias']
    ? drupal_get_path_alias($_GET['q'])
    : $_GET['q'];

  $parts = explode('%', $argument_template);
  $regex_fragment = '';
  $regexes = array();

  foreach($parts as $part){
    $regex_fragment .= $part.'([0-9a-zA-Z\-\_\.]*)';
    $regexes[] = $regex_fragment;
  }

  $regexes = array_reverse($regexes);
  $regex = '/(?:'.
    preg_replace(
      array('/\//',),
      array('\\/',),
      implode(')|(?:', $regexes)
    ).
    ')/';

  preg_match($regex, $path ,$arguments);
  $arguments = array_values(array_filter($arguments));
	array_shift($arguments);

  return $arguments;
}



function _popup_breadcrumb_view_enabled($view){
  return !$view->disabled;
}





